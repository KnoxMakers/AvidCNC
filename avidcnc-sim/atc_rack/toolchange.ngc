; M6 REMAP Macro for ATC track tool change
;
; Assumptions
; 1 Toolnumber is not equal to pocket number
; 2 pocket number is the discriminating factor for pick up procedure (from rack, from manual position)
; 3 all tools need to be measured 

; Uses global numbered variable #5190  to store the pocket of the tool that gets 
; mounted as a work around for the broken handler in linuxcnc tooltable
; Note: If #5190 is manually entered into linuxnc.var it will be stored
; between starts of linun, this is currently not desired.
; Uses M66 E0 (analog input 01 to obtain tool-prep-pocket from iocontrol. 
; This is more stable than a call on #<_hal[iocontrol.0.tool-prep-pocket]> as TxM6 and Tx andd M6 seperately are interpreted)

; Valve actuation is done using a single singal pin via M64 and M65 
; Coding of Valves is done in HAl config with LUT5 logic

o<toolchange> sub
;(auto-restore modal settings on return)
M73 
G20
M5 ; turn off the spindle!
M9 ; turn off Vacuum / Air Blast
; print to console (if available)
(print, Storing tool and pocket information in local variables)
#<newtool> = #<selected_tool>
#<oldtool> = #<tool_in_spindle>
;#<oldpocket> = #5190
#<oldpocket> = #<_current_pocket>
; call upon iocontrol.0.tool-prep-pocket via M66 and have it stored in #5399
M66 E0 L0
;#<newpocket> = #5399
#<newpocket> = #<_selected_pocket>
#5190=#5399
(print, oldtool=#<oldtool> oldpocket=#<oldpocket>)
(print, newtool=#<newtool> newpocket=#<newpocket>)
; we must execute this macro only in the milltask interpreter or preview will break, so test for '#<_task>' which is 1 for  the milltask interpreter and 0 in the UI's
O100 if [#<_task> EQ 0]
        (print, Task is Null)
O100     return [999]
O100 endif

; Ensure everything that we do is done in absolute coordinates
G90
; Cutter comp off, otherwise G53 might go wrong
G40
; Cancel tool offset (not needed until the end)
G49
; Set the Y limit so we can get to the tool rack area
M68 E00 Q#<_ini[AXIS_Y]MAX_LIMIT_ADDITIONAL>
; Pause for a tad to let the limit change happen
G4  P.1 

; First things first, rapid to safe Z
G53 G0 Z[#<_ini[AXIS_Z]MAX_LIMIT>-0.1]
(print, Moved safe Z)

; First, get rid of the old tool
; check if the spindle is not empty by checking if tool_in_spindle GT 0
O200 if [#<oldtool> EQ #<newtool>]
    ; This is a special case in which no tool needs to be dropped off. This assumes that the user has the tool table under control. further down, during pick up of newtool a message will be brought forward to GUI
    (print, do absolutly nothing)
O200 elseif [#<oldtool> GT 0]
    (print, Tool No  #<oldtool> is in the spindle - we need to put it away)
    ; Check if oldpocket is within range
    O210 if [#<oldpocket> GT 0]
        O220 if [#<oldpocket> LE #<_ini[ATC]NUMPOCKETS>]
            ;Tool within range, triggering put move to rack, assuming that the pocket is empty!
             (print, Putting tool away into rack in pocket #<oldpocket>)

            ; We are already at safe Z; now rapid to pre position for a specific pocket
            G53 G0 X[#<_ini[ATC]FIRSTPOCKET_X> + [#<oldpocket> -1] * #<_ini[ATC]DELTA_X> - #<_ini[ATC]SAFE_X>] Y[#<_ini[ATC]FIRSTPOCKET_Y> + [#<oldpocket> -1] * #<_ini[ATC]DELTA_Y> + #<_ini[ATC]SAFE_Y>] 

            ; Now put the tool down gently 
            ; first move X
            G53 G01 X[#<_ini[ATC]FIRSTPOCKET_X> + [#<oldpocket> -1] * #<_ini[ATC]DELTA_X>] F#<_ini[ATC]DROPSPEEDXY>

            ; second move Z partially rapid
            G53 G01 Z[#<_ini[ATC]OFF_HEIGHT_Z>]  F#<_ini[ATC]DROPSPEEDRAPID>

            ; Wait briefly before opening spindle to ensure it has stopped, additionally spindle on = false is checke in hal
            ;G4  P #<_ini[ATC]WAITSPINDLE> 
            
            G53 G01 Z[#<_ini[ATC]FIRSTPOCKET_Z>]  F#<_ini[ATC]DROPSPEEDRAPID>

            ; Put tool in rack
            G53 G01 Y[#<_ini[ATC]FIRSTPOCKET_Y> + [#<oldpocket> -1] * #<_ini[ATC]DELTA_Y>] F#<_ini[ATC]DROPSPEEDXY>

            ; Open ATC Spindle
            M66 P0 L3 Q20
            O230 if [#5399 LT 0]
              (abort, No ATC  Air Pressure) ; abort if no air pressure in 20 seconds
            O230 endif

            G01 G53 M62 P #<_ini[ATC_PINS]ATC_OPEN> Z #<_ini[ATC]OFF_HEIGHT_Z> F#<_ini[ATC]DROPSPEEDZ> 
            G4 P0.2

            ; Move back to safe Z above the oldpocket
            G53 G01 Z [#<_ini[ATC]FIRSTPOCKET_Z> + #<_ini[ATC]SAFE_Z>] F#<_ini[ATC]DROPSPEEDRAPID> 

            O215 if [#<newtool> EQ 0]
                M65 P #<_ini[ATC_PINS]ATC_OPEN> 
            O215 endif          
            (print, Tool released and spindle cleared to Z0)

            ; Spindle shouldn't have a tool in it now
            M61 Q0 G49 #5210 = 0 #3991 = 0

            ; We didn't don't have a new tool to pick up, so clear the rack
            O225 if [#<newtool> EQ 0]
                G53 G0 Z[#<_ini[AXIS_Z]MAX_LIMIT>-0.1]
                G53 G0 Y#<_ini[ATC]CLEARRACK_Y>
            O225 endif
            (PRINT, PUT TOOL BACK: #<oldpocket>, #<oldtool>)
            (DEBUG, EVAL[vcp.getWidget{"dynatc"}.store_tool{#<oldpocket>, #<oldtool>}])
        O220 else
            ; The tool's pocket number is not within the range of the rack and the tool needs to be removed manually
            ; Tool is still at safe Z height from before
            (print, Pocket is not within range, moving to manual change positon)
            G53 G0 Z[#<_ini[AXIS_Z]MAX_LIMIT>-0.1]

            ; Close Spindle, Check air psi
            M66 P0 L3 Q20
            O240 if [#5399 LT 0]
              (abort, No ATC  Air Pressure) ; abort if no air pressure in 20 seconds
            O240 endif
            M65 P #<_ini[ATC_PINS]ATC_OPEN>

            G53 G0 X[#<_ini[ATC]CHANGEX>] Y[#<_ini[ATC]CHANGEY>]
            G53 G0 Z[#<_ini[ATC]CHANGEZ>]
            M6 T0
            (PRINT, TOOLCALL: #<oldpocket>, #<oldtool>)
            (DEBUG, EVAL[vcp.getWidget{"dynatc"}.store_tool{#<oldpocket>, #<oldtool>}])
        o220 endif
    (print,  We are now without a tool at some position either safely above pocket or the manual change position)

    O210 endif
O200 else
    ; There is nothing to do here but end the conditional
    (print, There is no tool in the spindle - No action required at this time)
O200 endif

(print, Reached end of drop off without error)

; Second Step, get new tool
; Check if the new tool number is EQ 0
o300 if [#<oldtool> EQ #<newtool>]
    ; This is to check if the requested tool is already in the spindle. If so, all other steps are 
    ;skipped an a message is displayed to the user using print
    (print, Attention - No tool change required. Not doing anything, check if tool offset remains valid)
O300 elseif [#<newtool> GT 0]
    ; Tool is GT 0 and we thus need to get a tool from somewhere
    (print, New tool: #<newtool> needs to be picked up from #<newpocket>)
    ; Again, check if #newpocket is within range of the tool rack, otherwise pick at manual change position and measure
    O310 if [#<newpocket> GT 0]
    ; Check only for error handling
        O320 if [#<newpocket> LE #<_ini[ATC]NUMPOCKETS>]
            ; Tool within rack range, triggering get tool from rack, assuming that the pocket is filled
            (print, Getting tool #<newtool> from rack at pocket #<newpocket>)

            ; If we don't have a old tool or we're coming back from a manual tool change
            ; we need to move Y into pickup position
            O330 if [#<oldtool> LE 0 OR [#<oldpocket> GT #<_ini[ATC]NUMPOCKETS>] ]
               ; Safety check
               G53 G0 Z[#<_ini[AXIS_Z]MAX_LIMIT>-0.1] 
               G53 G0 X[#<_ini[ATC]FIRSTPOCKET_X> + [#<newpocket> -1] * #<_ini[ATC]DELTA_X> - #<_ini[ATC]SAFE_X>] Y[#<_ini[ATC]FIRSTPOCKET_Y> + [#<newpocket> -1] * #<_ini[ATC]DELTA_Y>]
            O330 endif
 
            ; Move to clearance level safe_Z
            G53 G01 Z [#<_ini[ATC]FIRSTPOCKET_Z> + #<_ini[ATC]SAFE_Z>] F#<_ini[ATC]DROPSPEEDRAPID>            
            G53 G0 X[#<_ini[ATC]FIRSTPOCKET_X> + [#<newpocket> -1] * #<_ini[ATC]DELTA_X> - #<_ini[ATC]SAFE_X>] 
            
            ; Now put the tool down gently 
            ; first move X
            G53 G01 X[#<_ini[ATC]FIRSTPOCKET_X> + [#<newpocket> -1] * #<_ini[ATC]DELTA_X>] F#<_ini[ATC]DROPSPEEDXY>

            G4 P #<_ini[ATC]WAITSPINDLE>            (print, above  pocket #<newpocket>, opening drawbar)

            ; open spindle (may already be open)
            M66 P0 L3 Q20
            O340 if [#5399 LT 0]
              (abort, No ATC  Air Pressure) ; abort if no air pressure in 20 seconds
            O340 endif
            M64 P #<_ini[ATC_PINS]ATC_OPEN>
            ; third move Z partially rapid
            G53 G01 Z[#<_ini[ATC]OFF_HEIGHT_Z>] F#<_ini[ATC]DROPSPEEDRAPID>
            G4 P0.2

            ; close spindle with sycronized Z move
            M66 P0 L3 Q20
            O250 if [#5399 LT 0]
              (abort, No ATC Air Pressure) ; abort if no air pressure in 20 seconds
            O250 endif
            G53 M63 P #<_ini[ATC_PINS]ATC_OPEN> G01 Z #<_ini[ATC]FIRSTPOCKET_Z> F#<_ini[ATC]DROPSPEEDZ> 

            G4 P0.2

            ; Pull tool from rack
            G53 G00 Y[#<_ini[ATC]FIRSTPOCKET_Y> + [#<newpocket> -1] * #<_ini[ATC]DELTA_Y> + #<_ini[ATC]SAFE_Y>] 

            ; Rapid Z to clearance
            G53 G0 Z[#<_ini[AXIS_Z]MAX_LIMIT>-0.1]
            (print, Moving finished, tool loaded, now tell linuxcnc about the toolchange using M61)
            
            ; Load tool number
	    M61 Q#<newtool>
            G53 G0 Y#<_ini[ATC]CLEARRACK_Y>
            (PRINT, TOOLCALL: #<newpocket>, 0)
            (DEBUG, EVAL[vcp.getWidget{"dynatc"}.store_tool{#<newpocket>, 0}])
        O320 else 
            ; The tool's pocket number is not within the range of the rack and the tool needs to picked up at the manual change position
            (print, Selected pocket is not within range, moving to manual pick up)
            ; rapid move to manual pick up position
            G53 G0 Z[#<_ini[AXIS_Z]MAX_LIMIT>-0.1]

            ; Close Spindle, Check air psi
            M66 P0 L3 Q20
            O360 if [#5399 LT 0]
              (abort, No ATC  Air Pressure) ; abort if no air pressure in 20 seconds
            O360 endif
            M65 P #<_ini[ATC_PINS]ATC_OPEN>

            G53 G0 X[#<_ini[ATC]CHANGEX>] Y[#<_ini[ATC]CHANGEY>]
            G53 G0 Z[#<_ini[ATC]CHANGEZ>]
            M6 T#<newtool>
            (PRINT, TOOLCALL: #<newpocket>, 0)
            (DEBUG, EVAL[vcp.getWidget{"dynatc"}.store_tool{#<newpocket>, 0}])
            (print, A tool is manually loaded and we can continue with measurement)
        O320 endif
    O310 endif
O300 endif

; Rest the limits back to normal
M68 E00 Q0

(print, End of Program)
o<toolchange> endsub [1]

M2
%
